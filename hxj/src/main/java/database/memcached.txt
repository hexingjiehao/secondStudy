1.学习memcached知识点
    1.官网地址：https://memcached.org
    2.定义：memcached是一套分布式的高速缓存系统。旨在通过减轻数据库负载来加速动态web应用程序。是一个内存中的键值存储。
           缺乏认证以及安全管制，应该将memcached服务器放置在防火墙后
           使用三十二比特的循环冗余校验（CRC-32）计算键值后，将数据分散在不同的机器上。当表格满了以后，接下来新增的数据会以LRU机制替换掉
           主要作用是当作缓存系统。
    3.参考工具网站：https://www.runoob.com/memcached/memcached-tutorial.html
    4.版本：最新版本v1.5.20
    4.5 mac版本的安装步骤：
            安装：brew install memcached
            启动：memcached start
            连接操作：telnet localhost 11211
    5.代码举例：
        function get_foo(foo_id)
            foo = memcached_get("foo:" . foo_id)
            return foo if defined foo

            foo = fetch_foo_from_database(foo_id)
            memcached_set("foo:" . foo_id, foo)
            return foo
        end
    6.菜鸟教程：
        1.安装操作：
            ubuntu:
                sudo apt-get install libevent ibevent-dev
                sudo apt-get install memcached
            centos:
                yum install libevent libevent-devel
                yum install memcached
            源代码安装：
                wget http://memcached.org/latest
                tar -zxvf memcached-1.x.x.tar.gz
                cd memcached-1.x.x
                ./configure --prefix=/usr/local/memcached
                make && make test
                sudo make install
        2.运行memcached:
            /usr/local/memcached/bin/memcached -p 11211 -m 64m -vv      //前台运行
            /usr/local/memcached/bin/memcached -p 11211 -m 64m -d       //后台运行
        3.命令行连接操作：
            telnet localhost 11211
        4.存储命令：
            set命令：
                set key flags 过期时间(秒) 字节数 值
                set runoob 0 900 9 hello
                get ruunoob  //查询到的结果 runoob 0 9 hello
            add命令：
                add new_key 0 900 10 hello
                get new_key
            replace命令：
                replace mykey 0 900 16 some_other_value
            append命令：追加数据
                append runoob 0 900 5 redis
            prepend命令：在前面追加数据
                prepend runoob 0 900 5 redis
            CAS命令：检查并设置值
                格式：cas key flags exptime bytes unique_cas_token [noreply] value
                token值的获取：gets key
                     cas tp 0 900 5 1 redis
        5.查找命令：
            get命令：
                get runoob
            gets命令：
                gets runoob
            delete命令：
                delete runoob
            incr和decr命令：自增和自减操作
                incr visitors 1
                decr visitors 1
        6.统计命令：
            stats命令：
                stats
                stats items:
                stats slabs:
                stats sizes:
                flush_all:
        7.java连接memcached服务：
            添加jar包；
            代码举例：
                import net.spy.memcached.MemcachedClient;
                import java.net.*;

                public class MemcachedJava {
                   public static void main(String[] args) {
                      try{
                         MemcachedClient mcc = new MemcachedClient(new InetSocketAddress("127.0.0.1", 11211));
                         System.out.println("Connection to server sucessful.");

                         Future fo = mcc.set("runoob", 900, "Free Education");
                         System.out.println("set status:" + fo.get());
                         System.out.println("runoob value in cache - " + mcc.get("runoob"));

                         fo = mcc.add("runoob", 900, "memcached");
                         System.out.println("add status:" + fo.get());

                         CASValue casValue = mcc.gets("runoob");
                          CASResponse casresp = mcc.cas("runoob", casValue.getCas(), 900, "Largest Tutorials-Library");

                         mcc.shutdown();
                      }catch(Exception ex){
                         System.out.println( ex.getMessage() );
                      }
                   }
                }

