1.学习apollo分布式全局配置:
    0.github官网地址：https://github.com/ctripcorp/apollo
    1.官方定义：Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，
                配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。
    2.依赖配置：java和mysql
    3.使用指南：
        2.1 应用接入指南{如何在一个现有的apollo服务器上进行分布式配置}
                名词解释：
                    普通应用：独立运行程序。比如web程序，main程序
                    公共组件：发布的类库、客户端程序，不会自己独立运行。比如Java的jar包，.Net的dll文件
                普通应用接入apollo服务器：
                    在Apollo服务器创建项目：输入 部门/“appid”/名称/负责人
                    然后给项目分配修改权限和发布权限🐖🐖🐖
                    给指定的命名控件增加指定配置项：❀❀❀
                        表格添加：创建-输入-提交
                        文本添加：可以用properties整个添加
                    将添加好的配置，进行发布，通知到嵌入应用程序的apollo客户端
                    apollo客户端读取配置：java客户端或者http接口
                        java客户端使用文档：https://github.com/ctripcorp/apollo/wiki/Java%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97
                    回滚已发布配置：”客户端不会存配置版本信息，只有服务器端才有“
                        将发布到客户端的配置回滚到上一个已发布版本，也就是说客户端读取到的配置会恢复到上一个版本，但页面上编辑状态的配置是不会回滚的，从而开发可以在修复配置后重新发布。


                配置只有在发布、回滚动作后才会被应用实际使用到。单纯修改不影响应用。


        2.2 java客户端使用指南{如何在java项目中使用apllo配置}
        2.3 apollo的使用场景和示例代码


    4.设计原理：
    5.开发指南：
    6.部署指南：
    7.常见问题：
    8.apollo的前世今生：