0.Spring的学习：
答：官网地址：https://Spring.io/projects/Spring-boot
所有的组件有：
Spring Boot:
Spring Framework:
Spring Data:
Spring Cloud:
Spring Cloud Data Flow:
Spring Security:
Spring Session:
Spring Integration:
Spring HATEOAS:
Spring REST Docs:
Spring Batch:
Spring AMQP:
Spring for Android
Spring CredHub:
Spring Flo:
Spring For Apache Kafka:
Spring LDAP:
Spring Mobile:
Spring Roo:
Spring Shell:
Spring Statemachine:
Spring Vault:
Spring Web Flow:
Spring Web Services:



1.Spring的循环依赖是什么？怎么解决？
答：
参考文档：https://blog.csdn.net/bingguang1993/article/details/88915576?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromBaidu-1.not_use_machine_learn_pai&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromBaidu-1.not_use_machine_learn_pai

A类中有属性B,B类型中有属性A。在项目启动的时候，因为循环依赖，Spring无法决定创建那个bean
上下文加载期间将检测循环依赖性
解决方法：
1.重新设计项目结构，让其更有层次感
2.对其中一个类使用@lazy注解：对其中一个bean进行懒加载：创建代理注入。第1次需要时才创建，而不是上下文检测期间
    用在构造函数的参数注解@lazy
3.使用Setter【Spring推荐】：会创建bean,但是只在需要时才注入依赖项。类似于懒加载。在set方法中上使用注解@Autowired

构造函数循环依赖如下：
@Component
public class CircularDependencyA {
    private CircularDependencyB circB;

    @Autowired
    public CircularDependencyA(CircularDependencyB circB) {
        this.circB = circB;
    }
}

@Component
public class CircularDependencyB {
    private CircularDependencyA circA;

    @Autowired
    public CircularDependencyB(CircularDependencyA circA) {
        this.circA = circA;
    }
}

属性循环依赖：
@Component
public class CircularDependencyA {
    @Autowired
    private CircularDependencyB circB;

}

@Component
public class CircularDependencyB {
    @Autowired
    private CircularDependencyA circA;

}