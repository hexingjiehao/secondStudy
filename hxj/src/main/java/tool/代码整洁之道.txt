1.学习《代码整洁之道》一书
    1.TPM概念：Total Productive Maintenance = 全员生产维护。它是一种质量保证手段。
              核心概念是5S原则：
                    整理：分类排序，命名标识很重要。
                    整顿：系统化，代码在它该在的地方，每个功能代码在它的指定层次位置
                    清楚：删除无效注释
                    清洁：标准化，相似的功能，使用相同的编写规范
                    身美：个人开发时随时保持代码整洁

    第1章.整洁代码
        答：模糊需求存在一日，代码永存不灭
            稍后等于永不
            混乱的代价：混乱增加，生产力下降，增加人手，期望提升生产力，新人惧怕，旧人压力山大，更多混乱。最终走向0生产力
            新设计不代表新开始，从问题源头解决才是正途
            坚守自己的代码底线，不做混乱的产品需求，即使产品不喜欢。
            混乱压力来源于期限，但是解决期限和混乱的治本的方法是代码整洁。忙则乱，乱则错，错则悔。核心是保持有计划的忙碌而不慌乱。
            整洁代码：干净的只做一件事。可读，小而美。核心是抽象，抽象是需要自己去悟！！！
            编辑器回放：读的时间是写的时间的10倍
    第2章.有意义的命名：
    第3章.函数：
    第4章.注释：
    第5章.格式：
    第6章.对象和数据结构
    第7章.错误处理：
    第8章.边界：
    第9章.单元测试：
    第10章.类：
    第11章.系统：
    第12章.迭进：
    第13章.并发编程：
    第14章.逐步改进：
    第15章.JUnit内幕：
    第16章.重构SerialDate:
    第17章.味道和启发：
2.开始学习书本章节：
    附录：并发编程
        1.客户端/服务器的例子
        2.执行的可能路径
        3.了解类库
        4.方法之间的依赖可能破坏并发代码
        5.提升吞吐量
        6.死锁
        7.测试多线程代码
        8.测试线程代码的工具支持

