总结2018年12月3日到2019年12月20日的工作：
0.在本地电脑安装各种资源：gitlab账号，腾讯企业邮箱，内部聊天工具mattermost，资源共享目录nextcloud。
    安装postgres数据库，学习mac电脑的各种快捷键。以及linux上的各种快捷命令。创建了各种企业账户。
    尝试安装时间机器备份mac电脑，但是内存不足失败了。开始每天写邮件报告文档学习进度。

1.学习BPMN流程符号,进而看JBPM文档。相似的流程引擎有JBPM,Activity。开始学习各种测试命令：
    看了rest assured, AssertJ。开始了解公司的项目组织结构。开始编写具体的rest和eb的测试方法，并使用测试命令检查效果

2.接触属于自己的linux虚拟机。从公司仓库拉取微服务项目到linux，并使用脚本命令启动后台。主要是数据初始化和crud的接口服务。

3.开始接触容器的概念：docker-compose。使用它来部署各种服务器模块。公司使用的语言是vertx。一种异步编程语言。

4.接下来是一段时间的operationID的测试工作。发请求，验证返回结果。断言判断。抽空了解每个测试的代码流程，每一个步的操作是怎么样的。
    开始逐渐在核心代码的地方进行了修改操作。开分支请求合并。被训斥不遵守规范。总之就是，每一个eb和rest都必须经过gradlew的全部测试才行。
    合并分支时，先将master合并到自己那里，再发送合并请求。这很重要。

5.开始接触keycloak相关的权限认证，以及后台的浏览器配置。主要看权限分配。有一套创建企业的流程。开始逐步的接触项目的各种概念：
    比如物料，品种。

6.学习了一个点python的语法。开始复习bpmn，准备合并到公司项目中。开始逐步的开始新的学习阶段。基本上是半年一次。
    学习infinispan，pgclient，kafka。学习了一个重要的算法--限流算法。主要是令牌桶

7.开始独立写一个算法：将数据库和腾讯云上的大量数据进行比较，然后删除掉腾讯云上的不再使用的数据。

8.继续学习响应式编程的思路：vert.x，future。开始学习vert.x全家桶中的各种知识点：服务器代理，熔断器，认证等操作

9.开始学习itext的各种文档，使用代码创建一个pdf签名文档。用来作为公司合同的生成。将html文件转化为pdf，或者使用pebble模版。
    最终完成一个功能：将html转化为pdf并上传到cos

10.开始写keycloak的压力测试代码。创建大量的企业并在企业下面随机创建员工。要解决token的过期问题。
    包含了kafka，定时任务，用python脚本部署大量keycloak

11.开会时学习kubernete，和docker组合在一起部署公司的项目。也就是分布式云部署。主要是写各种部署文件。
    在本地写了大量的部署用的yml文件。并且需要检查每一个docker容器是否是健康的。然后是逐个检查部署的服务是否能够外网访问。

12.开始学习zeebe流程。和vertx组合搭建分布式的工作流。尝试将rest请求的实现通过zeebe操作，提高程序吞吐量。
    并且编写人工任务的流程。学习sql语法，梳理每一个模块的具体流程。梳理权限的认证过程。使用zeebe执行延时任务。

13.后续又学习了一些零散的知识点：springcloud，正则表达式，dubbo等。看的走马观花。

14.正式做#问题，但是测试没做好，被训斥了一顿。


总而言之：一共有如下几个大事件。
    1.入职
    2.学习JBPM流程
    3.学习vert.x的全家桶知识点
    4.编写vert.x的eventbus和rest的测试代码
    5.编写算法：比较并删除cos上不再使用的附件
    6.学习itext和vert.x eventbus的整合，并将html转化为pdf上传到cos
    7.编写算法：测试多个keyclaok性能，创建大量企业和大量员工，修改大量的密码
    8.使用kubernate部署项目，编写了大量yml文件。并逐个api测试外网效果。
    9.学习zeebe流程。编写人工任务，延时任务的代码。并整合vert.x实现zeebe返回rest的结果
    10.开始做sprint任务，测试要谨慎。